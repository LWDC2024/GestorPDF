<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Inventario</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-8 text-center text-gray-800">Gestión de Inventario</h1>
        
        <div class="mb-8 flex justify-center space-x-4">
            <a href="/generate-catalog" target="_blank" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
                Ver Catálogo HTML
            </a>
            <a href="/generate-catalog-pdf" target="_blank" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded">
                Generar Catálogo PDF
            </a>
        </div>
        
        <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
            <h2 class="text-2xl font-bold mb-4">Agregar Producto</h2>
            <form id="addProductForm" class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <input type="text" name="id" placeholder="ID" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                    <input type="text" name="name" placeholder="Nombre del producto" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                    <input type="text" name="price" placeholder="Precio" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                    <input type="text" name="image" placeholder="URL de la imagen" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full">
                    Agregar Producto
                </button>
            </form>
        </div>

        <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 overflow-x-auto">
            <h2 class="text-2xl font-bold mb-4">Lista de Productos</h2>
            <table class="min-w-full leading-normal">
                <thead>
                    <tr>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Activo</th>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">ID</th>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Nombre</th>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Precio</th>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Imagen</th>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Acciones</th>
                    </tr>
                </thead>
                <tbody id="productTableBody">
                    <% products.forEach(function(product) { %>
                        <tr data-id="<%= product.id %>">
                            <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                                <input type="checkbox" class="toggle-active form-checkbox h-5 w-5 text-blue-600" <%= product.active ? 'checked' : '' %>>
                            </td>
                            <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm"><%= product.id %></td>
                            <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm"><%= product.name %></td>
                            <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm"><%= product.price %></td>
                            <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                                <img src="<%= product.image %>" alt="<%= product.name %>" class="h-12 w-12 object-cover rounded">
                            </td>
                            <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                                <button class="edit-btn bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1 px-2 rounded mr-2">Editar</button>
                                <button class="delete-btn bg-red-500 hover:bg-red-600 text-white font-bold py-1 px-2 rounded">Eliminar</button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const productTableBody = document.getElementById('productTableBody');
            const addProductForm = document.getElementById('addProductForm');

            // Agregar producto
            addProductForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(addProductForm);
                const product = Object.fromEntries(formData.entries());
                product.active = true;

                try {
                    const response = await fetch('/api/products', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(product),
                    });
                    if (response.ok) {
                        const result = await response.json();
                        addProductToTable(result.data);
                        addProductForm.reset();
                    } else {
                        console.error('Error al agregar el producto');
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            });

            // Cambiar estado activo
            productTableBody.addEventListener('change', async (e) => {
                if (e.target.classList.contains('toggle-active')) {
                    const row = e.target.closest('tr');
                    const id = row.dataset.id;
                    try {
                        const response = await fetch(`/api/products/${id}/toggle`, {
                            method: 'POST',
                        });
                        if (!response.ok) {
                            console.error('Error al cambiar el estado del producto');
                            e.target.checked = !e.target.checked; // Revertir estado del checkbox
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        e.target.checked = !e.target.checked; // Revertir estado del checkbox
                    }
                }
            });

            // Eliminar producto
            productTableBody.addEventListener('click', async (e) => {
                if (e.target.classList.contains('delete-btn')) {
                    const row = e.target.closest('tr');
                    const id = row.dataset.id;
                    if (confirm('��Estás seguro de que quieres eliminar este producto?')) {
                        try {
                            const response = await fetch(`/api/products/${id}`, {
                                method: 'DELETE',
                            });
                            if (response.ok) {
                                row.remove();
                            } else {
                                console.error('Error al eliminar el producto');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                        }
                    }
                }
            });

            // Editar producto
            productTableBody.addEventListener('click', async (e) => {
                if (e.target.classList.contains('edit-btn')) {
                    const row = e.target.closest('tr');
                    const id = row.dataset.id;
                    const name = prompt('Ingrese el nuevo nombre:');
                    const price = prompt('Ingrese el nuevo precio:');
                    const image = prompt('Ingrese la nueva URL de la imagen:');
                    if (name && price && image) {
                        try {
                            const response = await fetch(`/api/products/${id}`, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ name, price, image }),
                            });
                            if (response.ok) {
                                const result = await response.json();
                                updateProductInTable(result.data);
                            } else {
                                console.error('Error al actualizar el producto');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                        }
                    }
                }
            });

            function addProductToTable(product) {
                const row = document.createElement('tr');
                row.dataset.id = product.id;
                row.innerHTML = `
                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                        <input type="checkbox" class="toggle-active form-checkbox h-5 w-5 text-blue-600" ${product.active ? 'checked' : ''}>
                    </td>
                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">${product.id}</td>
                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">${product.name}</td>
                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">${product.price}</td>
                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                        <img src="${product.image}" alt="${product.name}" class="h-12 w-12 object-cover rounded">
                    </td>
                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                        <button class="edit-btn bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1 px-2 rounded mr-2">Editar</button>
                        <button class="delete-btn bg-red-500 hover:bg-red-600 text-white font-bold py-1 px-2 rounded">Eliminar</button>
                    </td>
                `;
                productTableBody.appendChild(row);
            }

            function updateProductInTable(product) {
                const row = productTableBody.querySelector(`tr[data-id="${product.id}"]`);
                if (row) {
                    row.innerHTML = `
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            <input type="checkbox" class="toggle-active form-checkbox h-5 w-5 text-blue-600" ${product.active ? 'checked' : ''}>
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">${product.id}</td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">${product.name}</td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">${product.price}</td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            <img src="${product.image}" alt="${product.name}" class="h-12 w-12 object-cover rounded">
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            <button class="edit-btn bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1 px-2 rounded mr-2">Editar</button>
                            <button class="delete-btn bg-red-500 hover:bg-red-600 text-white font-bold py-1 px-2 rounded">Eliminar</button>
                        </td>
                    `;
                }
            }
        });
    </script>
</body>
</html>